// Objective-C API for talking to github.com/jmayalag/prifi/prifi-mobile Go package.
//   gobind -lang=objc github.com/jmayalag/prifi/prifi-mobile
//
// File is generated by gobind. Do not edit.

#ifndef __PrifiMobile_H__
#define __PrifiMobile_H__

@import Foundation;
#include "Universe.objc.h"


@class PrifiMobileHttpRequestResult;
@class PrifiMobilePrifiLogging;
@protocol PrifiMobilePrifiLogger;
@class PrifiMobilePrifiLogger;

@protocol PrifiMobilePrifiLogger <NSObject>
- (void)close;
- (void)log:(long)level msg:(NSString*)msg;
@end

/**
 * Used for latency test
 */
@interface PrifiMobileHttpRequestResult : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
- (int64_t)latency;
- (void)setLatency:(int64_t)v;
- (long)statusCode;
- (void)setStatusCode:(long)v;
- (long)bodySize;
- (void)setBodySize:(long)v;
/**
 *  * Request google home page through PriFi
 *
 * It is a method instead of a function due to the type restriction of gomobile.
 */
- (BOOL)retrieveHttpResponseThroughPrifi:(NSString*)targetUrlString timeout:(long)timeout throughPrifi:(BOOL)throughPrifi error:(NSError**)error;
@end

@interface PrifiMobilePrifiLogging : NSObject <goSeqRefInterface, PrifiMobilePrifiLogger> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init:(long)debugLvl showTime:(BOOL)showTime useColors:(BOOL)useColors padding:(BOOL)padding l:(id<PrifiMobilePrifiLogger>)l;
- (void)close;
// skipped method PrifiLogging.GetLoggerInfo with unsupported parameter or return types

- (void)log:(long)level msg:(NSString*)msg;
@end

/**
 * Keys
 */
FOUNDATION_EXPORT BOOL PrifiMobileGenerateNewKeyPairAndAssign(NSError** error);

/**
 * Other parameters
 */
FOUNDATION_EXPORT BOOL PrifiMobileGetMobileDisconnectWhenNetworkError(BOOL* ret0_, NSError** error);

/**
 * PriFi Port
 */
FOUNDATION_EXPORT BOOL PrifiMobileGetPrifiPort(long* ret0_, NSError** error);

FOUNDATION_EXPORT NSString* PrifiMobileGetPrivateKey(NSError** error);

FOUNDATION_EXPORT NSString* PrifiMobileGetPublicKey(NSError** error);

/**
 * Relay Address
 */
FOUNDATION_EXPORT NSString* PrifiMobileGetRelayAddress(NSError** error);

/**
 * Relay Port
 */
FOUNDATION_EXPORT BOOL PrifiMobileGetRelayPort(long* ret0_, NSError** error);

/**
 * Relay Keys
 */
FOUNDATION_EXPORT NSString* PrifiMobileGetRelayPublicKey(NSError** error);

/**
 * Relay Socks Port
 */
FOUNDATION_EXPORT BOOL PrifiMobileGetRelaySocksPort(long* ret0_, NSError** error);

FOUNDATION_EXPORT void PrifiMobileLogError(NSString* msg);

FOUNDATION_EXPORT void PrifiMobileLogFatal(NSString* msg);

FOUNDATION_EXPORT void PrifiMobileLogInfo(NSString* msg);

FOUNDATION_EXPORT void PrifiMobileLogWarn(NSString* msg);

FOUNDATION_EXPORT PrifiMobileHttpRequestResult* PrifiMobileNewHttpRequestResult(void);

FOUNDATION_EXPORT PrifiMobilePrifiLogging* PrifiMobileNewPrifiLogging(long debugLvl, BOOL showTime, BOOL useColors, BOOL padding, id<PrifiMobilePrifiLogger> l);

FOUNDATION_EXPORT long PrifiMobileRegisterPrifiLogging(PrifiMobilePrifiLogging* pl);

FOUNDATION_EXPORT BOOL PrifiMobileSetMobileDisconnectWhenNetworkError(BOOL newValue, NSError** error);

FOUNDATION_EXPORT BOOL PrifiMobileSetPrivateKey(NSString* priKey, NSError** error);

FOUNDATION_EXPORT BOOL PrifiMobileSetPublicKey(NSString* pubKey, NSError** error);

FOUNDATION_EXPORT BOOL PrifiMobileSetRelayAddress(NSString* host, NSError** error);

FOUNDATION_EXPORT BOOL PrifiMobileSetRelayPort(long port, NSError** error);

FOUNDATION_EXPORT BOOL PrifiMobileSetRelayPublicKey(NSString* pubKey, NSError** error);

FOUNDATION_EXPORT BOOL PrifiMobileSetRelaySocksPort(long port, NSError** error);

/**
 * The "main" function that is called by Mobile OS in order to launch a client server
 */
FOUNDATION_EXPORT void PrifiMobileStartClient(void);

FOUNDATION_EXPORT void PrifiMobileStopClient(void);

@class PrifiMobilePrifiLogger;

@interface PrifiMobilePrifiLogger : NSObject <goSeqRefInterface, PrifiMobilePrifiLogger> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (void)close;
- (void)log:(long)level msg:(NSString*)msg;
@end

#endif
